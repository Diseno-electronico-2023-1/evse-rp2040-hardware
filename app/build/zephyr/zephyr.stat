ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x100035f5
  Start of program headers:          52 (bytes into file)
  Start of section headers:          737256 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         6
  Size of section headers:           40 (bytes)
  Number of section headers:         35
  Section header string table index: 34

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] .boot2            PROGBITS        10000000 0000f4 000100 00  AX  0   0  1
  [ 2] rom_start         PROGBITS        10000100 0001f4 0000a8 00 WAX  0   0  4
  [ 3] text              PROGBITS        100001a8 00029c 006aa8 00  AX  0   0  4
  [ 4] .ARM.exidx        ARM_EXIDX       10006c50 006d44 000008 00  AL  3   0  4
  [ 5] initlevel         PROGBITS        10006c58 006d4c 000060 00   A  0   0  4
  [ 6] devices           PROGBITS        10006cb8 006dac 0000a8 00   A  0   0  4
  [ 7] sw_isr_table      PROGBITS        10006d60 006e54 0000d0 00  WA  0   0  4
  [ 8] device_handles    PROGBITS        10006e30 006f24 00003a 00   A  0   0  2
  [ 9] log_const_se[...] PROGBITS        10006e6c 006f60 000068 00   A  0   0  4
  [10] log_backend_area  PROGBITS        10006ed4 006fc8 000010 00   A  0   0  4
  [11] cfb_font_area     PROGBITS        10006ee4 006fd8 000024 00   A  0   0  4
  [12] rodata            PROGBITS        10006f08 006ffc 003fd4 00   A  0   0  4
  [13] .ramfunc          PROGBITS        20000000 00b124 000000 00   W  0   0  1
  [14] datas             PROGBITS        20000000 00afd0 000100 00  WA  0   0  8
  [15] device_states     PROGBITS        20000100 00b0d0 00000e 00  WA  0   0  1
  [16] log_msg_ptr_area  PROGBITS        20000110 00b0e0 000004 00  WA  0   0  4
  [17] k_heap_area       PROGBITS        20000114 00b0e4 000014 00  WA  0   0  4
  [18] k_msgq_area       PROGBITS        20000128 00b0f8 000028 00  WA  0   0  4
  [19] bss               NOBITS          20000150 00b128 00021b 00  WA  0   0  8
  [20] noinit            NOBITS          20000370 00b128 004e40 00  WA  0   0  8
  [21] .comment          PROGBITS        00000000 00b124 000020 01  MS  0   0  1
  [22] .debug_aranges    PROGBITS        00000000 00b148 0016d0 00      0   0  8
  [23] .debug_info       PROGBITS        00000000 00c818 03e81c 00      0   0  1
  [24] .debug_abbrev     PROGBITS        00000000 04b034 00d335 00      0   0  1
  [25] .debug_line       PROGBITS        00000000 058369 01e20f 00      0   0  1
  [26] .debug_frame      PROGBITS        00000000 076578 0036e4 00      0   0  4
  [27] .debug_str        PROGBITS        00000000 079c5c 009c9e 01  MS  0   0  1
  [28] .debug_loc        PROGBITS        00000000 0838fa 01f4ea 00      0   0  1
  [29] .debug_ranges     PROGBITS        00000000 0a2de8 0053c0 00      0   0  8
  [30] .ARM.attributes   ARM_ATTRIBUTES  00000000 0a81a8 00002a 00      0   0  1
  [31] .last_section     PROGBITS        1000b02c 00b120 000004 00   A  0   0  1
  [32] .symtab           SYMTAB          00000000 0a81d4 006b90 10     33 1015  4
  [33] .strtab           STRTAB          00000000 0aed64 005101 00      0   0  1
  [34] .shstrtab         STRTAB          00000000 0b3e65 000181 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x006d44 0x10006c50 0x10006c50 0x00008 0x00008 R   0x4
  LOAD           0x0000f4 0x10000000 0x10000000 0x00100 0x00100 R E 0x1
  LOAD           0x0001f4 0x10000100 0x10000100 0x0addc 0x0addc RWE 0x4
  LOAD           0x00afd0 0x20000000 0x1000aedc 0x00150 0x00150 RW  0x8
  LOAD           0x00b120 0x1000b02c 0x1000b02c 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x20000150 0x20000150 0x00000 0x05060 RW  0x8

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     .boot2 
   02     rom_start text .ARM.exidx initlevel devices sw_isr_table device_handles log_const_sections log_backend_area cfb_font_area rodata 
   03     datas device_states log_msg_ptr_area k_heap_area k_msgq_area 
   04     .last_section 
   05     bss noinit 
